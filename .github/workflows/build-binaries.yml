name: Build Cross-Platform Binaries

on:
  push:
    branches: [ main, master, copilot/fix-9 ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build Linux binary
      run: |
        pyinstaller --onefile --name gitlab-mcp-server-linux mcp_server.py
    
    - name: Test Linux binary
      run: |
        echo '{"jsonrpc": "2.0", "id": 1, "method": "initialize", "params": {"protocolVersion": "2024-11-05", "capabilities": {"tools": {}}, "clientInfo": {"name": "test-client", "version": "1.0"}}}' | ./dist/gitlab-mcp-server-linux
    
    - name: Upload Linux binary
      uses: actions/upload-artifact@v4
      with:
        name: gitlab-mcp-server-linux
        path: dist/gitlab-mcp-server-linux
        retention-days: 30

  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build macOS binary
      run: |
        pyinstaller --onefile --name gitlab-mcp-server-macos mcp_server.py
    
    - name: Test macOS binary
      run: |
        echo '{"jsonrpc": "2.0", "id": 1, "method": "initialize", "params": {"protocolVersion": "2024-11-05", "capabilities": {"tools": {}}, "clientInfo": {"name": "test-client", "version": "1.0"}}}' | ./dist/gitlab-mcp-server-macos
    
    - name: Upload macOS binary
      uses: actions/upload-artifact@v4
      with:
        name: gitlab-mcp-server-macos
        path: dist/gitlab-mcp-server-macos
        retention-days: 30

  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build Windows binary
      run: |
        pyinstaller --onefile --name gitlab-mcp-server-windows.exe mcp_server.py
    
    - name: Test Windows binary
      shell: powershell
      run: |
        echo '{"jsonrpc": "2.0", "id": 1, "method": "initialize", "params": {"protocolVersion": "2024-11-05", "capabilities": {"tools": {}}, "clientInfo": {"name": "test-client", "version": "1.0"}}}' | .\dist\gitlab-mcp-server-windows.exe
    
    - name: Upload Windows binary
      uses: actions/upload-artifact@v4
      with:
        name: gitlab-mcp-server-windows
        path: dist/gitlab-mcp-server-windows.exe
        retention-days: 30

  create-release:
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          gitlab-mcp-server-linux/gitlab-mcp-server-linux
          gitlab-mcp-server-macos/gitlab-mcp-server-macos
          gitlab-mcp-server-windows/gitlab-mcp-server-windows.exe
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
